{
  "name": "drunken worker",
  "plural": "drunken workers",
  "indefiniteArticle": "a",
  "description": "He looks like a tough fella.",
  "triggers": { "onAttack": "(function(attacker) {\n    if (this.enemies.indexOf(attacker) === -1) {\n        this.enemies.push(attacker);\n    }\n    this.setTimeout(function() {\n        this.invokeTrigger('onActive');\n    }, 200);\n})", "onCharacterDied": "(function(defendant, attacker) {\n    var index = this.enemies.indexOf(defendant);\n    if (index > -1) {\n        this.enemies.splice(index, 1);\n    }\n})", "onSpawn": "(function() {\n    var self = this;\n    self.enemies = [];\n\n    self.name = 'shipyard worker';\n\n    self.currentRoom.removeCharacter(self);\n    self.enter($('room:304'));\n\n    var previousAreaId = 0;\n\n    function go() {\n        var room = self.currentRoom;\n        var bar = room.portalNamed('bar');\n        if (bar && byChance(1, 2)) {\n            self.go(bar);\n        } else {\n            var portals = room.portals.filter(function(portal) {\n                return portal.name !== 'gate' && portal.canPassThrough() && !portal.isHiddenFromRoom(room);\n            });\n            if (portals.length > 1) {\n                portals = portals.filter(function(portal) {\n                    return portal.oppositeOf(room).id !== previousAreaId;\n                });\n            }\n            previousAreaId = room.id;\n            self.go(portals.randomElement());\n        }\n    }\n\n    function drink() {\n        var room = self.currentRoom;\n        room.characters.send(self.definiteName(room.characters).capitalized() +\n                             ' orders a large pint.');\n\n        if (self.name !== 'drunken worker' && byChance(1, 4)) {\n            self.setTimeout(function() {\n                room.characters.send(self.definiteName(room.characters).capitalized() +\n                                     ' starts to look increasingly drunk.');\n                self.name = 'drunken worker';\n            }, 4000);\n        }\n    }\n\n    function attack(character) {\n        if (!self.enemies.contains(character)) {\n            self.enemies.push(character);\n        }\n        self.kill(character);\n    }\n\n    function doSomething() {\n        var room = self.currentRoom;\n        var enemy = self.enemies.findFirstAmong(room.characters);\n        if (enemy) {\n            attack(enemy);\n            if (self.name === 'drunken worker') {\n                self.setTimeout(doSomething, randomInt(4000, 6000));\n            } else {\n                self.setTimeout(doSomething, 4000);\n            }\n        } else if (self.name === 'drunken worker' && byChance(1, 8) && room.characters.length > 1) {\n            attack(room.characters.filter(function(character) {\n                return character.id != self.id;\n            }).randomElement());\n            self.setTimeout(doSomething, randomInt(4000, 6000));\n        } else if (room.name.contains('Bar') &&\n                   room.characters.contains($('character:179')) && byChance(5, 6)) {\n            drink();\n            self.setTimeout(doSomething, randomInt(8000, 12000));\n        } else {\n            go();\n            self.setTimeout(doSomething, randomInt(7000, 15000));\n        }\n    }\n\n    self.setTimeout(doSomething, randomInt(7000, 15000));\n})" },
  "position": [ 0, 0, 0 ],
  "weight": 0,
  "cost": 0,
  "flags": "",
  "stats": [30, 30, 20, 20, 10, 10],
  "height": 0,
  "currentRoom": "room:176",
  "direction": [ 0, -100, 0 ],
  "race": "race:2",
  "characterClass": "class:147",
  "gender": "male",
  "respawnTime": 900000,
  "respawnTimeVariation": 900000,
  "hp": 3,
  "maxHp": 40,
  "mp": 10,
  "maxMp": 10,
  "gold": 0,
  "weapon": "0",
  "secondaryWeapon": "0",
  "shield": "0"
}
