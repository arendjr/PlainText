{
  "name": "city guard",
  "plural": "city guards",
  "indefiniteArticle": "a",
  "triggers": { "onActive": "(function() {\n    for (var i = 0; i < this.enemies.length; i++) {\n        var enemy = this.enemies[i];\n        if (enemy.currentRoom === this.currentRoom) {\n            this.kill(enemy);\n            return;\n        }\n    }\n})", "onAttack": "(function(attacker) {\n    if (this.enemies.indexOf(attacker) === -1) {\n        this.enemies.push(attacker);\n    }\n    this.setTimeout(function() {\n        this.invokeTrigger('onActive');\n    }, 200);\n})", "onCharacterAttacked": "(function(attacker, defendant) { if (attacker.name === 'city guard') { return; } if (this.enemies.indexOf(attacker) === -1) { this.enemies.push(attacker); } var self = this; this.setTimeout(function() { self.invokeTrigger('onActive'); }, 600); })", "onCharacterDied": "(function(defendant, attacker) { var index = this.enemies.indexOf(defendant); if (index > -1) { this.enemies.splice(index, 1); } })", "onCharacterEntered": "(function(attacker) { var self = this; this.setTimeout(function() { self.invokeTrigger('onActive'); }, 200); })", "onReceive": "(function(giver, item) {\n    if (item.name === \"cup of herbal tea\") {\n        this.setTimeout(function() {\n            this.say(\"Thanks!\");\n        }, 450);\n        this.setTimeout(function() {\n            if (giver.inventory.named(\"south gate tower key\")) {\n                this.talk(giver, \"But I already gave you a key, better you put it to use!\");\n                return;\n            }\n            \n            var key = this.inventory.named(\"south gate tower key\").copy();\n            giver.addInventoryItem(key);\n            \n            var name = this.definiteName(this.currentRoom.characters,\n                                         Options.Capitalized);\n            var description = key.indefiniteName();\n            giver.send(\"%1 gives you %2.\".arg(name, description));\n            \n            var others = this.currentRoom.characters;\n            others.removeOne(this);\n            others.removeOne(giver);\n            others.send(\"%1 gives %2 to %3.\".arg(name, description, giver.name));\n        }, 900);\n    }\n})", "onSpawn": "(function() {\n    this.enemies = [];\n    \n    this.follow($(\"character:146\"));\n    this.guard($(\"portal:1485\"));\n})", "onTalk": "(function(character, message) {\n    this.setTimeout(function() {\n        message = message.toLower();\n        if (message.endsWith(\".\") || message.endsWith(\"?\") || message.endsWith(\"!\")) {\n            message = message.left(message.length - 1);\n        }\n        \n        var words = message.split(\" \");\n        if (words[0] === \"hi\" || words[0] === \"hello\") {\n            this.talk(character, \"What's up?\");\n        } else if (words.contains(\"key\") || words.contains(\"tower\") ||\n                   words.contains(\"locked\")) {\n            this.talk(character, \"Do you want the key to the gate tower? \" +\n                                 \"I want you to do a favor for me first then.\");\n        } else if (words.contains(\"favor\") ||\n                   words.contains(\"what\") && words.contains(\"to\") && words.contains(\"do\")) {\n            this.talk(character, \"Please fetch me a herbal tea, and I'll give you a key.\");\n        } else {\n            character.send(\"The guard looks at you and shrugs.\");\n        }\n    }, 450);\n})" },
  "position": [ 0, 0, 0 ],
  "weight": 90,
  "cost": 0,
  "flags": "",
  "stats": [30, 30, 30, 30, 20, 20],
  "height": 180,
  "currentRoom": "room:59",
  "direction": [ 0, 0, 0 ],
  "inventory": [ "item:1612", "item:1613", "item:1619", "item:1620" ],
  "race": "race:2",
  "characterClass": "class:148",
  "gender": "male",
  "respawnTime": 1800000,
  "respawnTimeVariation": 1800000,
  "hp": 60,
  "maxHp": 60,
  "mp": 0,
  "maxMp": 20,
  "gold": 0,
  "weapon": "weapon:203",
  "secondaryWeapon": "0",
  "shield": "0"
}
