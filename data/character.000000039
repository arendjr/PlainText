{
  "name": "Earl",
  "plural": "Earls",
  "triggers": { "onActive": "(function() { for (var i = 0; i < this.enemies.length; i++) { var enemy = this.enemies[i]; if (enemy.currentRoom === this.currentRoom) { this.kill(enemy); return; } } })", "onAttack": "(function(attacker) { if (this.enemies.indexOf(attacker) === -1) { this.enemies.push(attacker); } var self = this; this.setTimeout(function() { self.invokeTrigger('onActive'); }, 200); })", "onCharacterDied": "(function(defendant, attacker) {\n    this.enemies.removeOne(defendant);\n    \n    this.returnLight();\n})", "onCharacterEntered": "(function(character) {\n    this.setTimeout(function() {\n        for (var i = 0; i < this.enemies.length; i++) {\n            var enemy = this.enemies[i];\n            if (enemy.currentRoom === this.currentRoom) {\n                this.kill(enemy);\n                return;\n            }\n        }\n\n        var hasLight = false;\n        for (i = 0; i < character.inventory.length; i++) {\n            if (character.inventory[i].name === \"mechanical light\") {\n                hasLight = true;\n                break;\n            }\n        }\n        if (hasLight) {\n            this.say(\"Hey, please put back my lighting device.\");\n        } else {\n            this.say(\"Hey there, can I help you?\");\n        }\n    }, 500);\n})", "onCharacterExit": "(function(activator, exitName) {\n    var hasLight = false;\n    for (var i = 0; i < activator.inventory.length; i++) {\n        if (activator.inventory[i].name === \"mechanical light\") {\n            hasLight = true;\n            break;\n        }\n    }\n    if (hasLight) {\n        this.say(\"Hey, you're not going anywhere till you put down my light!\");\n        return false;\n    }\n})", "onexit": "(function(character, exitName) { if (exitName != 'out') { return; } var hasLight = false; for (var i = 0; i < character.inventory.length; i++) { if (character.inventory[i].name == 'mechanical light') { hasLight = true; break; } }; if (hasLight) { this.say(\"Hey, you're not leaving with my lighting device!\"); return false; } })", "onInit": "(function() {\n    this.returnLight = function() {\n        this.setTimeout(function() {\n            if (!this.currentRoom.items.named(\"mechanical light\")) {\n                return;\n            }\n\n            this.execute(\"get mechanical\");\n            this.setTimeout(function() { this.execute(\"open door\"); }, 1000);\n            this.setTimeout(function() { this.execute(\"go door\"); }, 2000);\n            this.setTimeout(function() { this.execute(\"drop mechanical\"); }, 3000);\n            this.setTimeout(function() { this.execute(\"open door\");\n                                         this.setAction(\"\");\n                                         this.execute(\"go door\"); }, 4000);\n        }, 250);\n    };    \n})", "onItemDropped": "(function(item, owner) {\n    if (owner === this) {\n        return;\n    }\n    if (item.name === \"mechanical light\") {\n        this.returnLight();\n    }\n})", "onReceive": "(function(giver, item) {\n    if (this.enemies.indexOf(giver) > -1) {\n        this.say('You keep your shit to yourself!');\n        return false;\n    }\n\n    if (typeof item === 'number') {\n        this.setTimeout(function() {\n            this.say('Why, thank you. I can always use a little to maintain the tower.');\n        }, 400);\n        return true;\n    } else {\n        if (item instanceof Array) {\n            this.say('Sorry, but I have no use for any of that.');\n        } else if (item.name === 'mechanical light') {\n            this.say('Please put it back where you found it.');\n        } else {\n            this.say('Thanks, but I think you may have more use for that than I have.');\n        }\n    }\n    return false;\n})", "onSpawn": "(function() {\n    this.enemies = [];\n})", "onTalk": "(function(character, message) { if (message == 'tower' || message == 'light tower') { this.say(\"Nobody knows who built that tower, as far as we can tell it's been there forever. It's a real aid for the ships though, they can find our bay and navigate to the haven without trouble.\") } else if (message == '') { this.say(\"I'm Earl, keeper of the light tower.\"); } else { this.say(\"Say what?\") } })" },
  "position": [ 0, 0, 0 ],
  "weight": 90,
  "cost": 0,
  "flags": "",
  "stats": [40, 40, 40, 40, 20, 20],
  "height": 185,
  "currentRoom": "room:36",
  "direction": [ 100, 0, 0 ],
  "race": "race:2",
  "characterClass": "0",
  "gender": "male",
  "respawnTime": 12000,
  "respawnTimeVariation": 8000,
  "hp": 80,
  "maxHp": 80,
  "mp": 0,
  "maxMp": 20,
  "gold": 35,
  "weapon": "0",
  "secondaryWeapon": "0",
  "shield": "0"
}
